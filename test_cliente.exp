#!/usr/bin/expect -f

set timeout 5

# Cambia estos valores si tu servidor está en otro puerto
set server "localhost"
set port "1051"

# Inicia el cliente
spawn python3 cliente.py -s $server -p $port

expect "c>"

# 1. Registro de usuario
send "REGISTER usuario1\r"
expect {
    "REGISTER OK" { puts "Test 1: Registro OK - PASSED" }
    "USERNAME IN USE" { puts "Test 1: Usuario ya existe - PASSED" }
    timeout { puts "Test 1: Registro - FAILED" }
}

# 2. Registro duplicado
send "REGISTER usuario1\r"
expect {
    "USERNAME IN USE" { puts "Test 2: Registro duplicado - PASSED" }
    timeout { puts "Test 2: Registro duplicado - FAILED" }
}

# 3. Baja de usuario
send "UNREGISTER usuario1\r"
expect {
    "UNREGISTER OK" { puts "Test 3: Baja OK - PASSED" }
    timeout { puts "Test 3: Baja - FAILED" }
}

# 4. Baja de usuario inexistente
send "UNREGISTER usuario1\r"
expect {
    "USER DOES NOT EXIST" { puts "Test 4: Baja inexistente - PASSED" }
    timeout { puts "Test 4: Baja inexistente - FAILED" }
}

# 5. Registro y conexión
send "REGISTER usuario2\r"
expect "REGISTER OK"
send "CONNECT usuario2\r"
expect {
    "CONNECT OK" { puts "Test 5: Conexión OK - PASSED" }
    timeout { puts "Test 5: Conexión - FAILED" }
}

# 6. Conexión duplicada
send "CONNECT usuario2\r"
expect {
    "USER ALREADY CONNECTED" { puts "Test 6: Conexión duplicada - PASSED" }
    timeout { puts "Test 6: Conexión duplicada - FAILED" }
}

# 7. Publicar archivo (debe existir el archivo /tmp/archivo.txt)
exec sh -c {echo "contenido de prueba" > /tmp/archivo.txt}
send "PUBLISH /tmp/archivo.txt Prueba\r"
expect {
    "PUBLISH OK" { puts "Test 7: Publicar OK - PASSED" }
    "PUBLISH FAIL, CONTENT ALREADY PUBLISHED" { puts "Test 7: Ya publicado - PASSED" }
    timeout { puts "Test 7: Publicar - FAILED" }
}

# 8. Publicar duplicado
send "PUBLISH /tmp/archivo.txt Prueba\r"
expect {
    "PUBLISH FAIL, CONTENT ALREADY PUBLISHED" { puts "Test 8: Publicar duplicado - PASSED" }
    timeout { puts "Test 8: Publicar duplicado - FAILED" }
}

# 9. Listar usuarios
send "LIST USERS\r"
expect {
    "LIST_USERS OK" { puts "Test 9: Listar usuarios - PASSED" }
    timeout { puts "Test 9: Listar usuarios - FAILED" }
}

# 10. Listar contenido
send "LIST CONTENT usuario2\r"
expect {
    "LIST_CONTENT OK" { puts "Test 10: Listar contenido - PASSED" }
    timeout { puts "Test 10: Listar contenido - FAILED" }
}

# 11. Borrar archivo
send "DELETE /tmp/archivo.txt\r"
expect {
    "DELETE OK" { puts "Test 11: Borrar OK - PASSED" }
    timeout { puts "Test 11: Borrar - FAILED" }
}

# 12. Borrar archivo inexistente
send "DELETE /tmp/archivo.txt\r"
expect {
    "DELETE FAIL, CONTENT NOT PUBLISHED" { puts "Test 12: Borrar inexistente - PASSED" }
    timeout { puts "Test 12: Borrar inexistente - FAILED" }
}

# 13. Desconexión
send "DISCONNECT usuario2\r"
expect {
    "DISCONNECT OK" { puts "Test 13: Desconexión OK - PASSED" }
    timeout { puts "Test 13: Desconexión - FAILED" }
}

# 14. Salir
send "QUIT\r"
expect eof

puts "Batería de pruebas finalizada."